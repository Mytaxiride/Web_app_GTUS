
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.1/jquery.min.js"></script>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAGEWkbGfme-ofipGPre6m8xUjxMCg_JBc">
    </script>
    <script type="text/javascript" src="http://web.mytaxiride.com/includes/v3_epoly.js"></script>
    <script type="text/javascript">

        google.maps.visualRefresh = true;
        var globalavoidtolls = true;
        var whattomark = '';
        var pathtopickup = 1;
        var geocoder;
        var map;
        var markersArray = [];
        var drivermarkersArray = [];
        var polylineArray = [];
        var infowindows = [];

        var directionsDisplay;
        var directionsService = new google.maps.DirectionsService();

        //        var stepPolyline = new google.maps.Polyline({
        //            strokeColor: '#FF0000',
        //            strokeOpacity: 0.8,
        //            strokeWeight: 7
        //        });

        var polylineOptions = {
            strokeColor: '#00B3FD',
            strokeOpacity: 0.8,
            fillOpacity: 0,
            strokeWeight: 5,
            icons: [{
                icon: lineSymbol,
                offset: '0',
                repeat: '10px'
            }]
        };

        var polylineInvisible = new google.maps.Polyline({
            strokeColor: '#00B3FD',
            strokeOpacity: 0,
            fillOpacity: 0,
            strokeWeight: 0
        });

        var lineSymbol = {
            path: google.maps.SymbolPath.CIRCLE,
            fillOpacity: 1,
            scale: 3
        };

        function createInfoWindow(poly, content, infowindow) {
            google.maps.event.addListener(poly, 'mouseover', function (event) {
                infowindow.setContent(content);
                infowindow.setPosition(event.latLng);
                infowindow.open(map);
            });
            google.maps.event.addListener(poly, 'mouseout', function (event) {
                infowindow.close();
            });
            google.maps.event.addListener(poly, 'click', function (event) {
                google.maps.event.clearListeners(poly, 'mouseout');
                google.maps.event.clearListeners(poly, 'mouseover');
                infowindow.close();
                infowindow.setContent(content);
                infowindow.setPosition(event.latLng);
                infowindow.open(map);
            });
        }

        function isInfoWindowOpen(infoWindow) {
            var map = infoWindow.getMap();
            return (map !== null && typeof map !== "undefined");
        }

        function deleteMarkers() {
            for (var i = 0; i < drivermarkersArray.length; i++) {
                drivermarkersArray[i].setMap(null);
            }
            drivermarkersArray = [];
        }

        var polylineOptionsActual = new google.maps.Polyline({
            //strokeColor: '#0eb7f6',
            strokeColor: '#FF0000',
            strokeOpacity: 0,
            fillOpacity: 0,
            strokeWeight: 10,
            icons: [{
                icon: {
                    path: google.maps.SymbolPath.CIRCLE,
                    fillOpacity: 0.7,
                    scale: 3
                },
                offset: '0',
                repeat: '10px'
            }]
        });

        function renderDirectionsPolylines(routes) {
            var legs = routes.legs;
            //var stepPolyline;
            //var polydist = 0;
            var completePolyline = new google.maps.Polyline({
                strokeColor: '#00B3FD',
                strokeOpacity: 0,
                fillOpacity: 0,
                strokeWeight: 10,
                icons: [{
                    icon: lineSymbol,
                    offset: '0',
                    repeat: '10px'
                }]
            });
            for (i = 0; i < legs.length; i++) {
                var steps = legs[i].steps;
                for (j = 0; j < steps.length; j++) {
                    var nextSegment = steps[j].path;
                    //var stepPolyline = new google.maps.Polyline(polylineOptions);
                    for (k = 0; k < nextSegment.length; k++) {
                        //stepPolyline.getPath().push(nextSegment[k]);
                        completePolyline.getPath().push(nextSegment[k]);
                    }
                    //stepPolyline.setMap(map);
                    //polylines.push(stepPolyline);
                    //                    google.maps.event.addListener(stepPolyline, 'mouseout', function (evt) {
                    //                        infowindow.close();
                    //                    });
                }
            }
            completePolyline.setMap(map);
            polylineArray.push(completePolyline);
            //var lengthInMeters = google.maps.geometry.spherical.computeLength(stepPolyline.getPath())
            var pointInHalf = completePolyline.GetPointsAtDistance(completePolyline.Distance() / 2);
            var pointCoordinate = new google.maps.LatLng(pointInHalf[0].lat(), pointInHalf[0].lng());
            var infowindow = new google.maps.InfoWindow();
            infowindows.push(infowindow);
            //createInfoWindow(completePolyline, routes.legs[0].distance.text + '<br />' + routes.legs[0].duration.text, infowindow);
            infowindow.setContent("<div class=\"iw-cust\">" + routes.legs[0].distance.text + '<br />' + routes.legs[0].duration.text + "</div>");
            infowindow.setPosition(pointCoordinate);
            infowindow.open(map);
            google.maps.event.addListener(completePolyline, 'click', function (evt) {
                //alert('here');
                //infowindow.setContent(routes.legs[0].distance.text + '<br />' + routes.legs[0].duration.text);
                infowindow.setPosition(evt.latLng);
                infowindow.close();
                infowindow.open(map);
            });
        }

        function initialize() {
            alert("here");
            //geocoder = new google.maps.Geocoder();
            var myOptions = {
                center: new google.maps.LatLng(40.4230, -98.7372),
                zoom: 3,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                minZoom: 4
            }
            map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

            google.maps.event.addListener(map, 'zoom_changed', function () {
                var z = map.getZoom();
                if (z > 17)
                    map.setZoom(17);
            });
        }

        function clearOverlays() {
            for (var i = 0; i < markersArray.length; i++) {
                markersArray[i].setMap(null);
            }
            for (var i = 0; i < polylineArray.length; i++) {
                polylineArray[i].setMap(null);
            }
        }

        function clearRoute() {
            if (directionsDisplay != null) {
                directionsDisplay.setMap(null);
                directionsDisplay = null;
            }
        }

        var pinImageDriver = new google.maps.MarkerImage("http://web.mytaxiride.com/images/car_pin.png",
            new google.maps.Size(21, 15),
            new google.maps.Point(0, 0),
            new google.maps.Point(10, 8));

        var pinImageDriverGreen = new google.maps.MarkerImage("http://web.mytaxiride.com/images/car_pin_green.png",
            new google.maps.Size(21, 15),
            new google.maps.Point(0, 0),
            new google.maps.Point(10, 8));

        function goto(lat, lng, zoom) {
            var myOptions = {
                center: new google.maps.LatLng(lat, lng),
                zoom: zoom,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                minZoom: 4
            }
            map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
        }

        var globallat = '';
        var globallng = '';
        var globallocs = '';
        var globalcolor = '';
        function MarkPoint2(lat, lng, zoom, locs) {
            globallat = lat;
            globallng = lng;
            globallocs = locs;
            globalcolor = 'Red';
            whattomark = 'Point';
            setTimeout(function () {
                //MarkPoint(lat, lng, zoom);
                GetDirections(lat, lng, 'Red', locs);
            }
                , 100);
        }

        function MarkDriverRoute(lat, lng, zoom, locs, pickup) {
            globallat = lat;
            globallng = lng;
            globallocs = locs;
            globalcolor = 'Red';
            whattomark = 'Driver';
            pathtopickup = pickup;
            setTimeout(function () {
                //MarkPoint(lat, lng, zoom);
                GetDriverDirections(lat, lng, 'Red', locs, pickup);
            }
                , 100);
        }

        function MarkPoint2Green(lat, lng, zoom, locs) {
            globallat = lat;
            globallng = lng;
            globallocs = locs;
            globalcolor = 'Green';
            whattomark = 'Point';
            setTimeout(function () {
                //MarkPointGreen(lat, lng, zoom);
                GetDirections(lat, lng, 'Green', locs);
            }
                , 100);
        }

        function MarkDriverRouteGreen(lat, lng, zoom, locs, pickup) {
            globallat = lat;
            globallng = lng;
            globallocs = locs;
            globalcolor = 'Green';
            whattomark = 'Driver';
            pathtopickup = pickup;
            setTimeout(function () {
                //MarkPointGreen(lat, lng, zoom);
                GetDriverDirections(lat, lng, 'Green', locs, pickup);
            }
                , 100);
        }

        function MarkPoint(lat, lng, zoom) {
            //alert(lat+' '+lng);
            clearOverlays(); //clear all previous markers
            if (lat == 0 && lng == 0) {
                initialize();
                return;
            }
            var locations = [
                ['Drivers Last Location', lat, lng, 4]
            ];

            if (map == null) {
                map = new google.maps.Map(document.getElementById('map_canvas'), {
                    zoom: zoom,
                    center: new google.maps.LatLng(lat, lng),
                    mapTypeId: google.maps.MapTypeId.ROADMAP,
                    minZoom: 4
                });
            }
            else {
                map.setZoom(zoom);
                map.setCenter(new google.maps.LatLng(lat, lng));
            }

            var infowindow = new google.maps.InfoWindow();
            infowindows.push(infowindow);
            var marker, i;

            for (i = 0; i < locations.length; i++) {
                marker = new google.maps.Marker({
                    position: new google.maps.LatLng(locations[i][1], locations[i][2]),
                    icon: pinImageDriver,
                    map: map
                });
                markersArray.push(marker);
                google.maps.event.addListener(marker, 'click', (function (marker, i) {
                    return function () {
                        infowindow.setContent(locations[i][0]);
                        infowindow.open(map, marker);
                    }
                })(marker, i));
            }
        }

        function MarkPointGreen(lat, lng, zoom) {
            //alert(lat + ' ' + lng);
            clearOverlays(); //clear all previous markers
            if (lat == 0 && lng == 0) {
                initialize();
                return;
            }
            var locations = [
                ['Drivers Last Location', lat, lng, 4]
            ];

            if (map == null) {
                map = new google.maps.Map(document.getElementById('map_canvas'), {
                    zoom: zoom,
                    center: new google.maps.LatLng(lat, lng),
                    mapTypeId: google.maps.MapTypeId.ROADMAP,
                    minZoom: 4
                });
            }
            else {
                map.setZoom(zoom);
                map.setCenter(new google.maps.LatLng(lat, lng));
            }

            var infowindow = new google.maps.InfoWindow();
            infowindows.push(infowindow);
            var marker, i;

            for (i = 0; i < locations.length; i++) {
                marker = new google.maps.Marker({
                    position: new google.maps.LatLng(locations[i][1], locations[i][2]),
                    icon: pinImageDriverGreen,
                    map: map
                });
                markersArray.push(marker);
                google.maps.event.addListener(marker, 'click', (function (marker, i) {
                    return function () {
                        infowindow.setContent(locations[i][0]);
                        infowindow.open(map, marker);
                    }
                })(marker, i));
            }
        }

        var pinColor = "008000"; //green
        var pinImage = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|" + pinColor,
            new google.maps.Size(21, 34),
            new google.maps.Point(0, 0),
            new google.maps.Point(10, 34));
        var pinShadow = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_shadow",
            new google.maps.Size(40, 37),
            new google.maps.Point(0, 0),
            new google.maps.Point(12, 35));

        var pinColorBlue = "A0FFA0"; //green
        var pinImageBlue = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|" + pinColorBlue,
            new google.maps.Size(21, 34),
            new google.maps.Point(0, 0),
            new google.maps.Point(10, 34));

        var pinImagePassenger = new google.maps.MarkerImage("http://web.mytaxiride.com/images/passenger_pin.png",
            new google.maps.Size(21, 32),
            new google.maps.Point(0, 0),
            new google.maps.Point(10, 32));

        function GetDirections(dlat, dlang, dcolor, json) {
            try {
                erasePath();
                RemoveAllInfoWindows();
                var locations = $.parseJSON(json);
                //alert(locations);
                var waypts = [];
                var k = 0;
                var j = locations.length - 1;

                $.each(locations, function (i, item) {
                    if (k != 0 && k != j) {
                        //alert(k + ' ' + j);
                        waypts.push({
                            location: item.address,//new google.maps.LatLng(item.lat, item.lang),
                            stopover: true
                        });
                    }
                    k++;
                });

                //            if (start === undefined || end === undefined) {
                //                return false;
                //            }

                directionsDisplay = new google.maps.DirectionsRenderer(
                    {
                        suppressMarkers: true
                    });
                directionsDisplay.setMap(map);

                var start = locations[0].address; //new google.maps.LatLng(locations[0].lat, locations[0].lang)
                var end = locations[locations.length - 1].address; //new google.maps.LatLng(locations[locations.length - 1].lat, locations[locations.length - 1].lang)
                //alert(start);
                //alert(end);

                var request = {
                    origin: start,
                    destination: end,
                    waypoints: waypts,
                    //optimizeWaypoints: true,
                    avoidTolls: globalavoidtolls,
                    travelMode: google.maps.TravelMode.DRIVING
                };

                //var markerindex = 0;
                directionsService.route(
                    request,
                    function (response, status) {
                        if (status == google.maps.DirectionsStatus.OK) {
                            for (var i = 0, len = response.routes.length; i < len; i++) {
                                //alert(response.routes[0].legs.length);
                                var totalDistance = 0;
                                var totalDuration = 0;
                                for (i = 0; i < response.routes[0].legs.length; i++) {
                                    totalDistance += response.routes[0].legs[i].distance.value;
                                    totalDuration += response.routes[0].legs[i].duration.value;
                                    var polylineway = new google.maps.Polyline({
                                        //strokeColor: '#0eb7f6',
                                        strokeColor: '#FF0000',
                                        strokeOpacity: 0,
                                        fillOpacity: 0,
                                        strokeWeight: 10,
                                        icons: [{
                                            icon: lineSymbol,
                                            offset: '0',
                                            repeat: '10px'
                                        }]
                                    });

                                    var steps = response.routes[0].legs[i].steps;
                                    for (j = 0; j < steps.length; j++) {
                                        var nextSegment = steps[j].path;
                                        //var stepPolyline = new google.maps.Polyline(polylineOptions);
                                        for (k = 0; k < nextSegment.length; k++) {
                                            polylineway.getPath().push(nextSegment[k]);
                                        }
                                    }
                                    polylineway.setMap(map);
                                    polylineArray.push(polylineway);
                                    //alert(polylineway.Distance());
                                    //                                var fromchar = String.fromCharCode(97 + i).toUpperCase();
                                    //                                var tochar = String.fromCharCode(98 + i).toUpperCase();
                                    //alert(markerindex);
                                    var fromchar = locations[i].markername;
                                    var tochar = locations[i + 1].markername;

                                    //markerindex++;
                                    var infowindow = new google.maps.InfoWindow();
                                    infowindows.push(infowindow);
                                    createInfoWindow(polylineway, "From " + fromchar + " to " + tochar + '<br />' + response.routes[0].legs[i].distance.text + '<br />' + response.routes[0].legs[i].duration.text, infowindow);
                                }
                                window.external.MethodToCallFromScript(totalDuration, totalDistance);
                                new google.maps.DirectionsRenderer({
                                    map: map,
                                    directions: response,
                                    routeIndex: i,
                                    suppressMarkers: true,
                                    polylineOptions: polylineInvisible
                                });
                            }
                        } else {
                            $("#error").append("Unable to retrieve your route<br />");
                        }
                    }
                );

                clearOverlays(); //clear all previous markers
                var infowindow = new google.maps.InfoWindow();
                infowindows.push(infowindow);
                var marker, i;

                //            for (i = 0; i < locations.length; i++) {
                //                if (i != 0 && i != locations.length - 1) {
                //                    var pinColor = "A0FFA0"; //light green
                //                    var pin = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=" + String.fromCharCode(97 + i).toUpperCase() + "|" + pinColor,
                //        new google.maps.Size(21, 34),
                //        new google.maps.Point(0, 0),
                //        new google.maps.Point(10, 34));
                //                    marker = new google.maps.Marker({
                //                        position: new google.maps.LatLng(locations[i].lat, locations[i].lang),
                //                        icon: pin,
                //                        map: map,
                //                        shadow: pinShadow,
                //                        animation: google.maps.Animation.DROP
                //                    });
                //                    markersArray.push(marker);
                //                    google.maps.event.addListener(marker, 'click', (function (marker, i) {
                //                        return function () {
                //                            infowindow.setContent(locations[i].address);
                //                            infowindow.open(map, marker);
                //                        }
                //                    })(marker, i));
                //                }
                //            }
                for (i = 0; i < locations.length; i++) {
                    //                if (i != 0 && i != locations.length - 1) {
                    //                    marker = new google.maps.Marker({
                    //                        position: new google.maps.LatLng(locations[i].lat, locations[i].lang),
                    //                        icon: pinImagePassenger,
                    //                        map: map,
                    //                        shadow: pinShadow,
                    //                        animation: google.maps.Animation.DROP
                    //                    });
                    //                    markersArray.push(marker);
                    //                    google.maps.event.addListener(marker, 'click', (function (marker, i) {
                    //                        return function () {
                    //                            infowindow.setContent("Pickup");
                    //                            infowindow.open(map, marker);
                    //                        }
                    //                    })(marker, i));
                    //                }

                    //if (i == locations.length - 1) {
                    if (locations[i].type == "drop") {
                        //alert("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=" + locations[i].markername + "|" + locations[i].color);
                        //var pinColorDest = "008000"; //green
                        //var pinDest = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=" + locations[i].markername + "|" + locations[i].color + "|C0C0C0",
                        //    new google.maps.Size(21, 34),
                        //    new google.maps.Point(0, 0),
                        //    new google.maps.Point(10, 34));

                        marker = new google.maps.Marker({
                            position: new google.maps.LatLng(locations[i].lat, locations[i].lang),
                            //icon: pinDest,
                            map: map,
                            //shadow: pinShadow,
                            //animation: google.maps.Animation.DROP,
                            icon: pinSymbol('#' + locations[i].color),
                            label: locations[i].markername
                        });
                        markersArray.push(marker);
                        google.maps.event.addListener(marker, 'click', (function (marker, i) {
                            return function () {
                                infowindow.setContent(locations[i].address);
                                infowindow.open(map, marker);
                            }
                        })(marker, i));
                    }
                    else {
                        //alert("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=" + locations[i].markername + "|" + locations[i].color);
                        //else if (i == 0) {
                        //var pinColorPick = "F7619E"; //Purple
                        //var pinPick = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=" + locations[i].markername + "|" + locations[i].color,
                        //    new google.maps.Size(21, 34),
                        //    new google.maps.Point(0, 0),
                        //    new google.maps.Point(10, 34));
                        marker = new google.maps.Marker({
                            position: new google.maps.LatLng(locations[i].lat, locations[i].lang),
                            //icon: pinPick,
                            map: map,
                            //shadow: pinShadow,
                            //animation: google.maps.Animation.DROP,
                            icon: pinSymbol('#' + locations[i].color),
                            label: locations[i].markername
                        });
                        markersArray.push(marker);
                        google.maps.event.addListener(marker, 'click', (function (marker, i) {
                            return function () {
                                infowindow.setContent(locations[i].address);
                                infowindow.open(map, marker);
                            }
                        })(marker, i));
                    }
                }
                if (dlang != 0 && dlang != 0) {
                    if (dcolor == 'Red') {
                        marker = new google.maps.Marker({
                            position: new google.maps.LatLng(dlat, dlang),
                            icon: pinImageDriver,
                            map: map
                        });
                    }
                    else {
                        marker = new google.maps.Marker({
                            position: new google.maps.LatLng(dlat, dlang),
                            icon: pinImageDriverGreen,
                            map: map
                        });
                    }
                    markersArray.push(marker);
                    google.maps.event.addListener(marker, 'click', (function (marker, i) {
                        return function () {
                            infowindow.setContent("Drivers Last Location");
                            infowindow.open(map, marker);
                        }
                    })(marker, i));
                }
                //$('#map_canvas').show();
            }
            catch (err) {
                alert(err.message);
            }
        }

        function erasePath() {
            if (directionsDisplay != null) {
                directionsDisplay.setMap(null);
                directionsDisplay = null;
            }
        }

        function GetDriverDirections(dlat, dlang, dcolor, json, pickup) {
            RemoveAllInfoWindows();
            deleteMarkers();
            var locations = $.parseJSON(json);
            //alert(locations);
            var waypts = [];
            var k = 0;
            var j = locations.length - 1;

            $.each(locations, function (i, item) {
                if (k != 0 && k != j) {
                    //alert(k + ' ' + j);
                    waypts.push({
                        location: new google.maps.LatLng(item.lat, item.lang),
                        stopover: true
                    });
                }
                k++;
            });

            //            if (start === undefined || end === undefined) {
            //                return false;
            //            }
            erasePath();
            directionsDisplay = new google.maps.DirectionsRenderer(
                {
                    suppressMarkers: true
                });
            directionsDisplay.setMap(map);

            var start = new google.maps.LatLng(dlat, dlang);
            var end;
            if (pickup == 1) {
                end = new google.maps.LatLng(locations[0].lat, locations[0].lang);
            }
            else {
                end = new google.maps.LatLng(locations[1].lat, locations[1].lang);
            }
            //var end = new google.maps.LatLng(locations[locations.length - 1].lat, locations[locations.length - 1].lang);
            //alert(start);
            //alert(end);
            var request = {
                origin: start,
                destination: end,
                waypoints: waypts,
                optimizeWaypoints: true,
                avoidTolls: globalavoidtolls,
                travelMode: google.maps.TravelMode.DRIVING,
                drivingOptions: {
                    departureTime: new Date(Date.now()),
                    trafficModel: 'bestguess'
                },
                provideRouteAlternatives: true
            };
            directionsService.route(
                request,
                function (response, status) {
                    if (status == google.maps.DirectionsStatus.OK) {
                        for (var i = 0, len = response.routes.length; i < len; i++) {
                            if (i == 0) {
                                directionsDisplay = new google.maps.DirectionsRenderer({
                                    map: map,
                                    directions: response,
                                    routeIndex: i,
                                    suppressMarkers: true,
                                    polylineOptions: polylineOptionsActual
                                });
                                var infowindow = new google.maps.InfoWindow();
                                infowindows.push(infowindow);
                                window.external.MethodToCallFromScript(response.routes[0].legs[0].duration.value, response.routes[0].legs[0].distance.value);
                                createInfoWindow(polylineOptionsActual, response.routes[0].legs[0].distance.text + '<br />' + response.routes[0].legs[0].duration.text, infowindow);
                            }
                            else {
                                renderDirectionsPolylines(response.routes[i]);
                                //                    new google.maps.DirectionsRenderer({
                                //                        map: map,
                                //                        directions: response,
                                //                        routeIndex: i,
                                //                        suppressMarkers: true
                                //                    });
                            }
                        }
                    } else {
                        $("#error").append("Unable to retrieve your route<br />");
                    }
                }
            );

            clearOverlays(); //clear all previous markers
            var infowindow = new google.maps.InfoWindow();
            infowindows.push(infowindow);
            var marker, i;
            for (i = 0; i < locations.length; i++) {
                //if (i == locations.length - 1) {
                if (locations[i].type == "drop") {
                    //var pinColorDest = "008000"; //green
                    //var pinDest = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=" + String.fromCharCode(97 + i).toUpperCase() + "|" + locations[i].color + "|C0C0C0",
                    //    new google.maps.Size(21, 34),
                    //    new google.maps.Point(0, 0),
                    //    new google.maps.Point(10, 34));

                    marker = new google.maps.Marker({
                        position: new google.maps.LatLng(locations[i].lat, locations[i].lang),
                        //icon: pinDest,
                        map: map,
                        //shadow: pinShadow,
                        //animation: google.maps.Animation.DROP,
                        icon: pinSymbol('#' + locations[i].color),
                        label: locations[i].markername
                    });
                    markersArray.push(marker);
                    droplat = locations[i].lat;
                    droplong = locations[i].lang;
                    dropoffmarker = marker;
                    google.maps.event.addListener(marker, 'click', (function (marker, i) {
                        return function () {
                            infowindow.setContent(locations[i].address);
                            infowindow.open(map, marker);
                        }
                    })(marker, i));
                }
                else {
                    //else if (i == 0) {
                    //var pinColorPick = "F7619E"; //Purple
                    var pinPick = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=" + String.fromCharCode(97 + i).toUpperCase() + "|" + locations[i].color,
                        new google.maps.Size(21, 34),
                        new google.maps.Point(0, 0),
                        new google.maps.Point(10, 34));
                    marker = new google.maps.Marker({
                        position: new google.maps.LatLng(locations[i].lat, locations[i].lang),
                        //icon: pinPick,
                        map: map,
                        shadow: pinShadow,
                        //animation: google.maps.Animation.DROP,
                        icon: pinSymbol('#' + locations[i].color),
                        label: String.fromCharCode(97 + i).toUpperCase()
                    });
                    markersArray.push(marker);
                    picklat = locations[i].lat;
                    picklong = locations[i].lang;
                    pickupmarker = marker;
                    google.maps.event.addListener(marker, 'click', (function (marker, i) {
                        return function () {
                            infowindow.setContent(locations[i].address);
                            infowindow.open(map, marker);
                        }
                    })(marker, i));
                }
            }
            if (dlang != 0 && dlang != 0) {
                if (dcolor == 'Red') {
                    marker = new google.maps.Marker({
                        position: new google.maps.LatLng(dlat, dlang),
                        icon: pinImageDriver,
                        map: map
                    });
                }
                else {
                    marker = new google.maps.Marker({
                        position: new google.maps.LatLng(dlat, dlang),
                        icon: pinImageDriverGreen,
                        map: map
                    });
                }
                drivermarkersArray.push(marker);
                drivermarker = marker;
                driverlat = dlat;
                driverlong = dlang;
                google.maps.event.addListener(marker, 'click', (function (marker, i) {
                    return function () {
                        infowindow.setContent("Drivers Last Location");
                        infowindow.open(map, marker);
                    }
                })(marker, i));
            }
            //$('#map_canvas').show();

        }

        function GetDriverDirectionsToDropOff() {
            RemoveAllInfoWindows();
            pathtopickup = 0;
            erasePath();
            directionsDisplay = new google.maps.DirectionsRenderer(
                {
                    suppressMarkers: true
                });
            directionsDisplay.setMap(map);

            var start = new google.maps.LatLng(driverlat, driverlong);
            var end = new google.maps.LatLng(droplat, droplong);
            var request = {
                origin: start,
                destination: end,
                avoidTolls: globalavoidtolls,
                travelMode: google.maps.TravelMode.DRIVING,
                drivingOptions: {
                    departureTime: new Date(Date.now()),
                    trafficModel: 'bestguess'
                },
                provideRouteAlternatives: true
            };
            //            directionsService.route(request, function (result, status) {
            //                if (status == google.maps.DirectionsStatus.OK) {
            //                    window.external.MethodToCallFromScript(result.routes[0].legs[0].duration.value, result.routes[0].legs[0].distance.value);
            //                    directionsDisplay.setDirections(result);
            //                }
            //                else {
            //                    //alert(google.maps.DirectionsStatus.toString());
            //                    //alert('Error occured in getting directions!');
            //                }
            //            });
            directionsService.route(
                request,
                function (response, status) {
                    if (status == google.maps.DirectionsStatus.OK) {
                        for (var i = 0, len = response.routes.length; i < len; i++) {
                            if (i == 0) {
                                directionsDisplay = new google.maps.DirectionsRenderer({
                                    map: map,
                                    directions: response,
                                    routeIndex: i,
                                    suppressMarkers: true,
                                    polylineOptions: polylineOptionsActual
                                });
                                var infowindow = new google.maps.InfoWindow();
                                infowindows.push(infowindow);
                                window.external.MethodToCallFromScript(response.routes[0].legs[0].duration.value, response.routes[0].legs[0].distance.value);
                                createInfoWindow(polylineOptionsActual, response.routes[0].legs[0].distance.text + '<br />' + response.routes[0].legs[0].duration.text, infowindow);
                            }
                            else {
                                renderDirectionsPolylines(response.routes[i]);
                                //                    new google.maps.DirectionsRenderer({
                                //                        map: map,
                                //                        directions: response,
                                //                        routeIndex: i,
                                //                        suppressMarkers: true
                                //                    });
                            }
                        }
                    } else {
                        $("#error").append("Unable to retrieve your route<br />");
                    }
                }
            );
            routeto = 'dropoff';
        }

        function ClearTheMap() {
            clearOverlays();
            deleteMarkers();
            RemoveAllInfoWindows();
            erasePath();
        }

        function GetDriverDirectionsToPickup() {
            RemoveAllInfoWindows();
            pathtopickup = 1;
            erasePath();
            directionsDisplay = new google.maps.DirectionsRenderer(
                {
                    suppressMarkers: true
                });
            directionsDisplay.setMap(map);

            var start = new google.maps.LatLng(driverlat, driverlong);
            var end = new google.maps.LatLng(picklat, picklong);
            var request = {
                origin: start,
                destination: end,
                avoidTolls: globalavoidtolls,
                travelMode: google.maps.TravelMode.DRIVING,
                drivingOptions: {
                    departureTime: new Date(Date.now()),
                    trafficModel: 'bestguess'
                },
                provideRouteAlternatives: true
            };
            //            directionsService.route(request, function (result, status) {
            //                if (status == google.maps.DirectionsStatus.OK) {
            //                    window.external.MethodToCallFromScript(result.routes[0].legs[0].duration.value, result.routes[0].legs[0].distance.value);
            //                    directionsDisplay.setDirections(result);
            //                }
            //                else {
            //                    //alert(google.maps.DirectionsStatus.toString());
            //                    //alert('Error occured in getting directions!');
            //                }
            //            });
            directionsService.route(
                request,
                function (response, status) {
                    if (status == google.maps.DirectionsStatus.OK) {
                        for (var i = 0, len = response.routes.length; i < len; i++) {
                            if (i == 0) {
                                directionsDisplay = new google.maps.DirectionsRenderer({
                                    map: map,
                                    directions: response,
                                    routeIndex: i,
                                    suppressMarkers: true,
                                    polylineOptions: polylineOptionsActual
                                });
                                var infowindow = new google.maps.InfoWindow();
                                infowindows.push(infowindow);
                                window.external.MethodToCallFromScript(response.routes[0].legs[0].duration.value, response.routes[0].legs[0].distance.value);
                                createInfoWindow(polylineOptionsActual, response.routes[0].legs[0].distance.text + '<br />' + response.routes[0].legs[0].duration.text, infowindow);
                            }
                            else {
                                renderDirectionsPolylines(response.routes[i]);
                                //                    new google.maps.DirectionsRenderer({
                                //                        map: map,
                                //                        directions: response,
                                //                        routeIndex: i,
                                //                        suppressMarkers: true
                                //                    });
                            }
                        }
                    } else {
                        $("#error").append("Unable to retrieve your route<br />");
                    }
                }
            );
            routeto = 'pickup';
        }

        var pickupmarker;
        var dropoffmarker;
        var drivermarker;
        var driverlat;
        var driverlong;
        var picklat;
        var picklong;
        var droplat;
        var droplong;
        var routeto = 'pickup';
        function RefreshDriverLocation(dlat, dlang, to) {
            routeto = to;
            if (dlat != 0 && dlat != '' && (dlat != driverlat || dlang != driverlong)) {
                for (var i = 0; i < drivermarkersArray.length; i++) {
                    drivermarkersArray[i].setMap(null);
                }
                //alert(dlat + ',' + dlang);
                drivermarkersArray[0].lat = dlat;
                drivermarkersArray[0].lang = dlang;


                var marker, i;
                marker = new google.maps.Marker({
                    position: new google.maps.LatLng(dlat, dlang),
                    icon: pinImageDriver,
                    map: map
                });
                drivermarkersArray.push(marker);
                drivermarker = marker;
                driverlat = dlat;
                driverlong = dlang;
                google.maps.event.addListener(marker, 'click', (function (marker, i) {
                    return function () {
                        infowindow.setContent("Drivers Last Location");
                        infowindow.open(map, marker);
                    }
                })(marker, i));
                calculate_distance();
            }
        }

        function calculate_distance() {
            var service = new google.maps.DistanceMatrixService();
            start = drivermarker.getPosition();
            if (routeto == 'pickup')
                end = pickupmarker.getPosition();
            else
                end = dropoffmarker.getPosition();

            service.getDistanceMatrix(
                {
                    origins: [start],
                    destinations: [end],
                    travelMode: google.maps.TravelMode.DRIVING,
                    unitSystem: google.maps.UnitSystem.METRIC,
                    avoidTolls: globalavoidtolls
                },
                function (response, status) {
                    if (status == google.maps.DistanceMatrixStatus.OK) {
                        //var destinations = response.destinationAddresses;
                        var results = response.rows[0].elements;

                        //                    for (var j = 0; j < results.length; j++)
                        //                        duration[j] = results[j].duration.value;

                        //$('#total_dist').text(results[0].distance.text);
                        //$('#total_time').text(results[0].duration.text);
                        //var dist = results[0].distance.value * 0.000621371192;
                        //alert(results[0].duration.text);
                        window.external.MethodToCallFromScript(results[0].duration.value, results[0].distance.value);
                    }
                });
        }

        function RemoveAllInfoWindows() {
            for (var i = 0; i < infowindows.length; i++) {
                infowindows[i].close();
            }
            infowindows = [];
        }

        function AvoidTollsClick() {
            if (globalavoidtolls) {
                globalavoidtolls = false;
                $('#btnAt').css('background-color', 'red');
            }
            else {
                globalavoidtolls = true;
                $('#btnAt').css('background-color', 'green');
            }
            if (whattomark != '' && whattomark == 'Point') {
                GetDirections(globallat, globallng, globalcolor, globallocs, false);
            }
            else {
                GetDriverDirections(globallat, globallng, globalcolor, globallocs, pathtopickup);
            }
        }

        function pinSymbol(color) {
            return {
                path: "M-20,0a20,20 0 1,0 40,0a20,20 0 1,0 -40,0",
                fillColor: color,
                fillOpacity: 1,
                strokeWeight: 1,
                scale: .6,
                anchor: new google.maps.Point(0, 0)
            };
        }
    </script>
</head>
<body onload="initialize();">
    <div id="map_canvas" style="width: 100%; height: 100%;">
    </div>
    <div id="button_container" style="position: absolute; top: 17px; right: 80px; width: 6%;">
        <input type="button" id="btnAt" value="Avoid Tolls" style="height:35px;background-color:green;color:white;font-weight:bold;" onclick="AvoidTollsClick();" />
    </div>
</body>
</html>
